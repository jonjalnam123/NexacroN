<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_Left" width="248" height="738" titletext="New Form">
    <Layouts>
      <Layout height="738" width="248">
        <Grid id="Grid00" taborder="0" left="7" top="40" right="7" bottom="7" binddataset="gdsMenu" autofittype="col" treeinitstatus="expand,all" treeuseexpandkey="true" treeusecheckbox="false" oncelldblclick="Grid00_oncelldblclick">
          <Formats>
            <Format id="Menu">
              <Columns>
                <Column size="132"/>
              </Columns>
              <Rows>
                <Row size="24"/>
              </Rows>
              <Band id="body">
                <Cell text="bind:MENU_NAME" displaytype="treeitemcontrol" edittype="tree" treelevel="bind:MENU_LEVEL"/>
              </Band>
            </Format>
            <Format id="MyMenu">
              <Columns>
                <Column size="86"/>
              </Columns>
              <Rows>
                <Row size="24"/>
              </Rows>
              <Band id="body">
                <Cell text="bind:MENU_NAME"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btnMyMenu" taborder="1" text="마이메뉴" top="5" width="115" height="30" right="8" onclick="btnMyMenu_onclick"/>
        <Button id="btnMenu" taborder="2" text="메뉴" top="5" width="115" height="30" right="126" onclick="btnMenu_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.fvApp = nexacro.getApplication();

//왼쪽 카테고리 눌렀을때 차일드프레임에 보여주게 만들기 
this.Grid00_oncelldblclick = function(obj:nexacro.Grid,e:nexacro.GridClickEventInfo)
{	
	this.fnOpenForm(obj.getBindDataset(), e.row);
};

//(obj.getBindDataset(), e.row) 두개 값을 (objDs, pRow)로 받음 선언하지 않아도 순서만 맞게해주면됨
this.fnOpenForm = function(objDs, pRow) {
	
	//ChildFrame.init( strName, nLeft, nTop, nWidth, nHeight [, nRight, nBottom [,strUrl]] )
	var sMenuId = objDs.getColumn(pRow,"MENU_ID");//gdsMenu
	var sMenuName = objDs.getColumn(pRow,"MENU_NAME");
	var sFormUrl = objDs.getColumn(pRow,"FORM_URL");
	
	//화면 url 없으면 return
	if(sFormUrl.length <1) return;
	this.fvApp.avVFrameSet1.set_separatesize("40, *, 0"); //
	
	//화면이 열려있다면 setFocus 한번 연 화면 다시 들어가면 오류 떳는데 그거 잡아 줬음 
	var arrObj = this.fvApp.avWorkFrame.all;
	for(var i=0; i<arrObj.length; i++){
		if(arrObj[i].name == sMenuId) { //네임과 아이디가 같다면 (이미 열려져 있다면)
			arrObj[i].setFocus(); //포커스가 열려있는 곳으로 되고
			this.fvApp.avMdiFrame.form.tabMdi.set_tabindex(i); //left 탭 클릭하면 탑에 탭에 포커스 준다.
			return; //작업 하지 않겠다 리턴
		}
	}
	
	//화면을 띄우기 위한 ChildFrame 생성
	var objCF = new ChildFrame(sMenuId, 0, 0, 800, 600); //child frame의 크기 sMenuId를 쓴 이유는 겹치지 않기 위해 
	this.fvApp.avWorkFrame.addChild(sMenuId, objCF); //avWorkFrame경로에 차일드를 추가 
	
	objCF.set_showtitlebar(false); //타이틀바 닫기 늘리기 있는거 바 없애기
	objCF.set_resizable(true);
	objCF.set_openstatus("maximize");
	objCF.set_formurl("FrameBase::Form_Work.xfdl"); //url 지정 
	
	var objParam = {MENU_ID:sMenuId, MENU_NAME:sMenuName, FORM_URL:sFormUrl};
	objCF.param = objParam
	objCF.show(); //버튼, 차일드 만들때 다 쓴다 
	
	//fnAddTap 기능을 가져옴
	this.fvApp.avMdiFrame.form.fnAddTab(objParam);	
	
}


this.btnMenu_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.Grid00.set_binddataset("gdsMenu"); //지디에스 메뉴 데이터
	this.Grid00.set_formatid("Menu"); //메뉴 그리드 열기
};

this.btnMyMenu_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.Grid00.set_binddataset("gdsMyMenu"); //마이 메뉴 데이터 
	this.Grid00.set_formatid("MyMenu"); //마이 메뉴 그리드 열기	
};
]]></Script>
  </Form>
</FDL>
